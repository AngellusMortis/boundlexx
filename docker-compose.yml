version: "3.4"

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./docker/django/Dockerfile
      target: dev
      cache_from:
        - docker.pkg.github.com/angellusmortis/boundlexx/boundlexx_dev_django
        - boundlexx_dev_django
    image: boundlexx_dev_django
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
    env_file:
      - ./.env
    command: /start

  manage:
    <<: *django
    environment:
      - DJANGO_MANAGE=1
    command: ""

  test:
    <<: *django
    environment:
      - PYTEST=1
    command: ""

  lint:
    <<: *django
    depends_on: []
    entrypoint: /bin/bash
    command: -c "/lint.sh"

  format:
    <<: *django
    depends_on: []
    entrypoint: /bin/bash
    command: -c "/format.sh"

  postgres:
    build:
      context: .
      dockerfile: ./docker/postgres/Dockerfile
      cache_from:
        - docker.pkg.github.com/angellusmortis/boundlexx/boundlexx_postgres
        - boundlexx_postgres
    image: boundlexx_postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    env_file:
      - ./.env

  redis:
    image: redis:5.0
    command: redis-server --appendonly yes

  celery:
    <<: *django
    depends_on:
      - redis
      - postgres
    command: /start-celeryworker
    environment:
      - CELERY_WORKER_QUEUES=default,distance,cache,notify,poll,shop,control

  celerybeat:
    <<: *django
    depends_on:
      - redis
      - postgres
    command: /start-celerybeat

  flower:
    <<: *django
    command: /start-flower
