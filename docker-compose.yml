volumes:
  local_postgres_data: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./docker/django/Dockerfile
      target: dev
      cache_from:
        - ghcr.io/angellusmortis/boundlexx_django
        - ghcr.io/angellusmortis/boundlexx_dev_django
        - boundlexx_dev_django
    image: boundlexx_dev_django
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
    env_file:
      - ./.env
    command: start

  manage:
    <<: *django
    environment:
      - DJANGO_MANAGE=1
    command: ""

  test:
    <<: *django
    environment:
      - PYTEST=1
    command: ""

  lint:
    <<: *django
    depends_on: []
    entrypoint: /bin/bash
    command: -c "lint-code"

  format:
    <<: *django
    depends_on: []
    entrypoint: /bin/bash
    command: -c "format-code"

  postgres:
    build:
      context: .
      dockerfile: ./docker/postgres/Dockerfile
      cache_from:
        - ghcr.io/angellusmortis/boundlexx_postgres
        - boundlexx_postgres
    image: boundlexx_postgres
    shm_size: 1g
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env

  redis:
    image: redis:5.0
    command: redis-server --appendonly yes

  celery:
    <<: *django
    depends_on:
      - redis
      - postgres
    command: start-celeryworker
    environment:
      - CELERY_WORKER_QUEUES=default,distance,cache,notify,poll,shop,control

  celerybeat:
    <<: *django
    depends_on:
      - redis
      - postgres
    command: start-celerybeat

  huey-consumer:
    <<: *django
    depends_on:
      - redis
    command: start-huey-consumer

  huey-scheduler:
    <<: *django
    depends_on:
      - redis
    command: start-huey-scheduler
