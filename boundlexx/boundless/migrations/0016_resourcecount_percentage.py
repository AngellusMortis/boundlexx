# Generated by Django 3.0.9 on 2020-08-08 12:51

from django.db import migrations, models

embedded_resources_ids = [
    32800,
    32803,
    32804,
    32809,
    32807,
    32808,
    32806,
    32801,
    32785,
    32787,
    32788,
    32786,
    32789,
    32779,
    32777,
    32778,
    33081,
    33082,
    33083,
    33080,
    33078,
    33079,
    32802,
    32805,
]


def update_world_poll_group(total, resources):
    if len(resources) == 0:
        return

    for resource in resources:
        resource.percentage = (resource.count / total) * 100
        resource.save()


def calulcate_percentages(apps, schema_editor):
    ResourceCount = apps.get_model("boundless", "ResourceCount")

    resources = (
        ResourceCount.objects.all()
        .select_related("item")
        .order_by("world_poll_id", "-count")
    )
    current_id = None
    embedded_resource_total = 0
    embedded_resources = []
    surface_resources_total = 0
    surface_resources = []

    for resource in resources:
        if resource.world_poll_id != current_id:
            update_world_poll_group(
                embedded_resource_total, embedded_resources
            )
            update_world_poll_group(surface_resources_total, surface_resources)

            current_id = resource.world_poll_id
            embedded_resource_total = 0
            embedded_resources = []
            surface_resources_total = 0
            surface_resources = []

        if resource.item.game_id in embedded_resources_ids:
            embedded_resource_total += resource.count
            embedded_resources.append(resource)
        else:
            surface_resources_total += resource.count
            surface_resources.append(resource)

    update_world_poll_group(embedded_resource_total, embedded_resources)
    update_world_poll_group(surface_resources_total, surface_resources)


class Migration(migrations.Migration):

    dependencies = [
        ("boundless", "0015_auto_20200806_1109"),
    ]

    operations = [
        migrations.AddField(
            model_name="resourcecount",
            name="percentage",
            field=models.DecimalField(
                blank=True, decimal_places=2, max_digits=5, null=True
            ),
        ),
        migrations.RunPython(calulcate_percentages, migrations.RunPython.noop),
        migrations.AlterField(
            model_name="resourcecount",
            name="percentage",
            field=models.DecimalField(decimal_places=2, max_digits=5),
        ),
    ]
